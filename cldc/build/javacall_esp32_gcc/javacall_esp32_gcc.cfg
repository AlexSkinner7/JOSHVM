# Copyright (C) Max Mu
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2, as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License version 2 for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
# 
# Please visit www.joshvm.org if you need additional information or
# have any questions.


export ENABLE_C_INTERPRETER             := true
export ENABLE_C_INTERPRETER__BY         := javacall_esp32_gcc.cfg
export ENABLE_INTERPRETER_GENERATOR     := false
export ENABLE_INTERPRETER_GENERATOR__BY := javacall_esp32_gcc.cfg
export ENABLE_COMPILER                  := false
export ENABLE_COMPILER__BY              := javacall_esp32_gcc.cfg

host_os   = linux
host_arch = i386
os_family = linux
compiler  = gcc
arch      = c

ifndef MERGE_SOURCE_FILES
MERGE_SOURCE_FILES  = true
endif

ifndef SOURCE_MERGER_SIZE
SOURCE_MERGER_SIZE  = 35
endif

INVALID_JAVACALL_OUTPUT_DIR = (\
echo ===================================================================== ; \
echo JAVACALL_OUTPUT_DIR \(environment or GNUmake variable\) must be set.  ; \
echo Please set it such that it is possible to access                      ; \
echo \$${JAVACALL_OUTPUT_DIR}/inc and \$${JAVACALL_OUTPUT_DIR}/lib         ; \
echo directories.                                                          ; \
echo ===================================================================== )

ifeq ($(JAVACALL_OUTPUT_DIR),)
  $(shell $(INVALID_JAVACALL_OUTPUT_DIR) 1>&2)
  $(error JAVACALL_OUTPUT_DIR is not set)
endif
ifneq ($(shell if test -d $(JAVACALL_OUTPUT_DIR); then echo valid; fi),valid)
  $(shell $(INVALID_JAVACALL_OUTPUT_DIR) 1>&2)
  $(error $${JAVACALL_OUTPUT_DIR} does not point to a directory)
endif
ifneq ($(shell if test -d $(JAVACALL_OUTPUT_DIR)/inc; then echo valid; fi),valid)
  $(shell $(INVALID_JAVACALL_OUTPUT_DIR) 1>&2)
  $(error $${JAVACALL_OUTPUT_DIR/inc} is not a directory)
endif
ifneq ($(shell if test -d $(JAVACALL_OUTPUT_DIR)/lib; then echo valid; fi),valid)
  $(shell $(INVALID_JAVACALL_OUTPUT_DIR) 1>&2)
  $(error $${JAVACALL_OUTPUT_DIR/lib} is not a directory)
endif

ifneq ($(findstring CYGWIN, $(shell uname)), CYGWIN)
    define fixcygpath_m
    echo $(1)
    endef
else
    define fixcygpath_m
    echo $(1) | xargs -n1 cygpath -m
    endef
endif

LOOP_GEN_FLAGS = +GenerateGNUCode +AddExternCUnderscore
ROM_GEN_FLAGS  = +GenerateGNUCode

ifeq ($(IsRomGen),true)
    CPP_DEF_FLAGS += -m32
    ASM_FLAGS += --32
    LINK_FLAGS += -m32 -lpthread
endif

ifeq ($(IsTarget),true)
export ENABLE_PCSL = true
export ENABLE_PCSL := true
    os_family = javacall
    arch = c
	compiler = gcc
    target_arch = xtensa
	host_os = linux
	
	MakeDepsMain_javacall = UnixPlatform
	MakeDepsOpts_javacall = -resolveVpath true
	
ifneq ($(PLATFORM_EXTRA_MAKEFILE_DIR)x, x)
	include $(PLATFORM_EXTRA_MAKEFILE_DIR)/platform_extra.cfg
endif
MERGE_SOURCE_FILES  = false

export ENABLE_TIMER_THREAD     = false
export ENABLE_TIMER_THREAD__BY = javacall_esp32_gcc.cfg

export ENABLE_PRODUCT_PRINT_STACK = true
export ENABLE_PRODUCT_PRINT_STACK__BY = javacall_esp32_gcc.cfg

    export skip_link_image := true
    
    JAVACALL_INCLUDE_DIR=$(JAVACALL_OUTPUT_DIR)/inc
    JAVACALL_LIB_DIR=$(JAVACALL_OUTPUT_DIR)/lib

    CPP_DEF_FLAGS += $(PLATFORM_EXTRA_CFLAGS) -I$(JAVACALL_INCLUDE_DIR)
    CPP_DEF_FLAGS += -DNO_STDINT -DXTENSA 
else
	MakeDepsMain_javacall = UnixPlatform
	MakeDepsOpts_javacall = -resolveVpath true
endif
